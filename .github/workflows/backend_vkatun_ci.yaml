name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: "cr.selcloud.ru/vkatun"
  IMAGE_NAME: "vkatun"
  CONTAINER_NAME: "vkatun-container"

jobs:
  # пушим в наш registry
  image-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        # логин и пароль храним в секретах гитхаба
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

      - name: Build and Push Docker Image
        # многострочный ru. (echo $GITHUB_SHA | head -c7) -хэш коммита в 7 символов
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME -f backend/Dockerfile backend/ 

  deploy-image:
    runs-on: ubuntu-latest
    needs: image-build-and-push

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Print current directory tree
        run: |
          pwd
          ls -R

      - name: Copy docker-compose.yaml and nginx.conf to server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          source: "backend/docker-compose.yaml,backend/nginx.conf"
          target: "~/backend"
          strip_components: 1

      - name: Deploy to Selectel Cloud via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
          script: |
            TAG_NAME=$(echo $GITHUB_SHA | head -c7)
            
            docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY
            
            cd ~/backend
            
            echo "JWT_SECRET=${{ vars.JWT_SECRET }}" >> .env
            echo "ADMIN_EMAILS=${{ vars.ADMIN_EMAILS }}" >> .env
            echo "DEEPSEEK_API_KEY=${{ vars.DEEPSEEK_API_KEY }}" >> .env
            echo "DEEPSEEK_URL=${{ vars.DEEPSEEK_URL }}" >> .env
            echo "DEEPSEEK_MODEL=${{ vars.DEEPSEEK_MODEL }}" >> .env
            echo "ROLE_SYSTEM=${{ vars.ROLE_SYSTEM }}" >> .env
            echo "ROLE_USER=${{ vars.ROLE_USER }}" >> .env
            echo "EXTRACT=${{ vars.EXTRACT }}" >> .env
            echo "GRAMMAR=${{ vars.GRAMMAR }}" >> .env
            echo "STRUCTURE=${{ vars.STRUCTURE }}" >> .env
            echo "SKILLS=${{ vars.SKILLS }}" >> .env
            echo "POSTGRES_STR=${{ vars.POSTGRES_STR }}" >> .env
            echo "POSTGRES_DB=${{ vars.POSTGRES_DB }}" >> .env
            echo "POSTGRES_USER=${{ vars.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ vars.POSTGRES_PASSWORD }}" >> .env
            
            docker-compose down
            sed -i "s|build:.*|image: $REGISTRY/$IMAGE_NAME:$TAG_NAME|" docker-compose.yaml
            sed -i "/dockerfile:/d" docker-compose.yaml
            sed -i "/context:/d" docker-compose.yaml
            docker-compose pull
            docker-compose up -d --force-recreate